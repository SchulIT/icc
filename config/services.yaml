# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration

imports:
    - { resource: version.yaml }
    - { resource: config.yaml }

parameters:
    commonmark.config:
        renderer:
            block_separator: "\n"
            inner_separator: "\n"
            soft_break: "\n"
        enable_em: true,
        enable_strong: true,
        use_asterisk: true,
        use_underscore: true,
        html_input: 'escape'
        allow_unsafe_links: false

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        App\Book\AttendanceSuggestion\SuggestionStrategyInterface:
            tags: [ 'app.book.attendance_suggestion']
        App\Book\IntegrityCheck\IntegrityCheckInterface:
            tags: [ 'app.book.integrity_check']
        App\Dashboard\Absence\AbsenceResolveStrategyInterface:
            tags: [ 'app.absence_resolver' ]
        App\Grouping\GroupingStrategyInterface:
            tags: [ 'app.grouping_strategy' ]
        App\Sorting\SortingStrategyInterface:
            tags: [ 'app.sorting_strategy' ]
        App\Notification\Email\EmailStrategyInterface:
            tags: [ 'app.notifications.email_strategy' ]
        App\Notification\NotificationHandlerInterface:
            tags: [ 'app.notifications.handler']
        App\Untis\Html\Substitution\InfotextReaderInterface:
            tags: [ 'app.untis.import.infotext_reader' ]
        App\Untis\StudentId\StudentIdGeneratorInterface:
            tags: [ 'app.untis.student_id_generator' ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection'
            - '../src/Entity'
            - '../src/Request/Data'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Doctrine\:
        resource: '../src/Doctrine/*Subscriber.php'
        tags: ['doctrine.event_subscriber']

    App\Doctrine\LessonAttendanceUpdateSubscriber:
        arguments:
            $isEnabled: '%env(ASYNC_CHECKS)%'

    # SESSIONS
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            $pdoOrDsn: '%env(DATABASE_URL)%'

    # SAML
    LightSaml\SpBundle\Security\User\UsernameMapperInterface:
        alias: lightsaml_sp.username_mapper.simple

    LightSaml\Store\Id\IdStoreInterface:
        class: SchulIT\CommonBundle\Store\IdStore

    SchulIT\CommonBundle\Command\CreateCertificateCommand:
        arguments:
            $types:
                saml:
                    keyFile: '%sp_cert_key%'
                    certFile: '%sp_cert_file%'
                oauth2:
                    keyFile: '%kernel.project_dir%/oauth/oauth.key'
                    certFile: '%kernel.project_dir%/oauth/oauth.pub'

    SchulIT\CommonBundle\EventSubscriber\SamlExceptionSubscriber:
        arguments:
            $retryRoute: 'lightsaml_sp.login'
            $loggedInRoute: 'dashboard'

    # JSON
    App\Request\JsonParamConverter:
        class:
        arguments:
            $prefixes:
                - 'App\Request\Data'
                - 'App\Request\Book'
                - 'App\Request\Message'

    JMS\Serializer\SerializationContext:
        calls:
            - [ setSerializeNull, [ true ]]

    JMS\Serializer\ContextFactory\DeserializationContextFactoryInterface:
        alias: 'jms_serializer.configured_deserialization_context_factory'

    # FLYSYSTEM
    App\Filesystem\DocumentFilesystem:
        public: true
        arguments:
            $filesystem: '@oneup_flysystem.documents_filesystem'

    App\Filesystem\MessageFilesystem:
        public: true
        arguments:
            $filesystem: '@oneup_flysystem.messages_filesystem'

    App\Filesystem\ChatFilesystem:
        public: true
        arguments:
            $filesystem: '@oneup_flysystem.chat_filesystem'

    App\Security\ImportUserAuthenticator:
        arguments:
            $presharedKey: '%env(IMPORT_PSK)%'

    # SECURITY
    App\Security\User\UserMapper:
        arguments:
            $typesMap: '%types_map%'

    App\Security\CronUserProvider:
        arguments:
            $username: 'cron'
            $password: '%env(CRON_PASSWORD)%'

    # MENU
    App\Menu\Builder:
        tags:
            - { name: knp_menu.menu_builder, method: mainMenu, alias: mainMenu }

    App\Menu\ServicesMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: servicesMenu, alias: servicesMenu }

    App\Menu\ImportMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: importMenu, alias: importMenu }

    App\Menu\UserMenuBuilder:
        arguments:
            $idpProfileUrl: '%env(IDP_PROFILE_URL)%'
        tags:
            - { name: knp_menu.menu_builder, method: userMenu, alias: userMenu }

    App\Menu\AdminMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: adminMenu, alias: adminMenu }

    App\Menu\AdminDataMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: dataMenu, alias: dataMenu }

    App\Menu\AdminSettingsMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: settingsMenu, alias: settingsMenu }

    App\Menu\AdminToolsMenuBuilder:
        tags:
            - { name: knp_menu.menu_builder, method: toolsMenu, alias: toolsMenu }

    SchulIT\CommonBundle\Menu\Voter:
        tags:
            - { name: knp_menu.voter }

    # SERVICES
    App\Book\AttendanceSuggestion\SuggestionResolver:
        arguments:
            $strategies: !tagged app.book.attendance_suggestion

    App\Book\IntegrityCheck\IntegrityCheckRunner:
        arguments:
            $checks: !tagged app.book.integrity_check

    App\Dashboard\Absence\:
        resource: '../src/Dashboard/Absence/*Strategy.php'

    App\Sorting\:
        resource: '../src/Sorting/*Strategy.php'

    App\Grouping\:
        resource: '../src/Grouping/*Strategy.php'

    App\Dashboard\Absence\AbsenceResolver:
        arguments:
            - !tagged app.absence_resolver

    App\Grouping\Grouper:
        arguments:
            - !tagged app.grouping_strategy

    App\Sorting\Sorter:
        arguments:
            - !tagged app.sorting_strategy

    App\Rooms\Status\ServiceCenterRoomStatusHelper:
        arguments:
            $client: '@eight_points_guzzle.client.servicecenter'
            $isEnabled: '%env(bool:ROOM_STATUS)%'

    # CONTROLLER
    App\Controller\WikiAdminController:
        bind:
            $wikiFilesystem: '@oneup_flysystem.wiki_filesystem'

    App\Controller\WikiController:
        bind:
            $wikiFilesystem: '@oneup_flysystem.wiki_filesystem'

    App\Controller\StudentAbsenceController:
        bind:
            $studentAbsencesFilesystem: '@oneup_flysystem.student_absence_filesystem'

    App\Controller\BookController:
        arguments:
            $isAsyncChecksEnabled: '%env(ASYNC_CHECKS)%'

    # MARKDOWN
    League\CommonMark\Extension\CommonMarkCoreExtension: ~

    League\CommonMark\Extension\Autolink\AutolinkExtension: ~

    League\CommonMark\EnvironmentInterface:
        class: League\CommonMark\Environment
        arguments:
            $config: "%commonmark.config%"
        calls:
            - [ addExtension, [ "@League\\CommonMark\\Extension\\CommonMarkCoreExtension" ]]
            - [ addExtension, [ "@League\\CommonMark\\Extension\\Autolink\\AutolinkExtension"]]
            - [ addExtension, [ "@App\\Markdown\\MarkdownExtension" ]]

    League\CommonMark\MarkdownConverterInterface:
        class: League\CommonMark\MarkdownConverter
        arguments:
            $environment: "@League\\CommonMark\\EnvironmentInterface"

    EasySlugger\SluggerInterface:
        class: EasySlugger\Utf8Slugger

    # HELPER
    App\Ics\IcsHelper:
        arguments:
            $appName: '%env(APP_NAME)%'
            $languageCode: '%env(LANGUAGE)%'
            $appUrl: '%env(APP_URL)%'

    Mimey\MimeTypes: ~

    # CONVERTER
    App\Converter\EnumStringConverter:
        bind:
            $enumFormKeyMapping:
                gender: App\Entity\Gender
                grade_teacher_type: App\Entity\GradeTeacherType
                message_scope: App\Entity\MessageScope
                message_priority: App\Entity\MessagePriority
                study_group_type: App\Entity\StudyGroupType
                user_type: App\Entity\UserType
                ics_access_token_type: App\Entity\IcsAccessTokenType
                display_target_user_type: App\Entity\DisplayTargetUserType
                absence_reason: App\Dashboard\AbsenceReason
                sick_reason: App\Entity\SickNoteReason
                student_id_format: App\Untis\StudentIdFormat

    # DOCTRINE:
    Doctrine\Persistence\ManagerRegistry:
        alias: 'doctrine'

    Doctrine\Migrations\Version\DbalMigrationFactory: ~
    App\Migrations\Factory\MigrationFactoryDecorator:
        decorates: Doctrine\Migrations\Version\DbalMigrationFactory
        arguments:
            $migrationFactory: '@App\Migrations\Factory\MigrationFactoryDecorator.inner'

    # DARK MODE:
    SchulIT\CommonBundle\DarkMode\DarkModeManagerInterface:
        class: App\DarkMode\DarkModeManager

    # NOTIFICATIONS
    App\Notification\Email\:
        resource: '../src/Notification/Email/*Strategy.php'

    App\Notification\NotificationService:
        arguments:
            $handler: !tagged app.notifications.handler

    App\Notification\Email\EmailNotificationHandler:
        arguments:
            $strategies: !tagged app.notifications.email_strategy
            $appName: '%env(APP_NAME)%'
            $sender: '%env(MAILER_FROM)%'
            $logger: '@monolog.logger.notifications'

    App\Notification\Pushover\PushoverNotificationHandler:
        arguments:
            $logger: '@monolog.logger.notifications'

    App\Notification\Email\DefaultEmailStrategy:
        arguments:
            $sender: '%env(MAILER_FROM)%'

    App\Notification\Email\ImportStrategy:
        arguments:
            $appName: '%env(APP_NAME)%'

    App\TeacherAbsence\TeacherAbsenceNotifier:
        arguments:
            $appName: '%env(APP_NAME)%'
            $sender: '%env(MAILER_FROM)%'

    # COMMANDS
    #SchulIT\CommonBundle\Command\SendMailsCommand:
    #    arguments:
    #        $messageLimit: '%env(int:MAILER_LIMIT)%'
    #    tags:
    #        - { name: shapecode_cron.cron_job, expression: '*\/2 * * * *' }

    App\Command\RemoveExpiredStudentAbsencesCommand:
        arguments:
            $filesystem: '@oneup_flysystem.student_absence_filesystem'

    App\Command\CleanupAuditLogCommand:
        arguments:
            $retentionDays: '%env(AUDIT_RETENTION_DAYS)%'


    App\Command\RunIntegrityCheckCommand:
        arguments:
            $isEnabled: '%env(ASYNC_CHECKS)%'

    App\Command\BackupCommand:
        arguments:
            $projectPath: '%kernel.project_dir%'
            $databaseDsn: '%env(DATABASE_URL)%'
            $backupDirectory: '%kernel.project_dir%/backup'
            $tempDirectory: '%kernel.project_dir%/backup/tmp'
            $files:
                - '.env.local'
            $directories:
                - 'files'
                - 'saml'

    App\Command\RestoreCommand:
        arguments:
            $projectPath: '%kernel.project_dir%'
            $databaseDsn: '%env(DATABASE_URL)%'
            $backupDirectory: '%kernel.project_dir%/backup'
            $tempDirectory: '%kernel.project_dir%/backup/tmp'
            $files:
                - '.env.local'
            $directories:
                - 'files'
                - 'saml'

    # SECTION
    App\Section\SectionResolver: ~

    App\Section\CachedSectionResolver:
        decorates: App\Section\SectionResolver
        bind:
            $sectionResolver: '@.inner'
            $cache: '@app.cache.memory'

    App\Section\SectionResolverInterface:
        alias: App\Section\CachedSectionResolver

    # MONOLOG
    SchulIT\CommonBundle\Monolog\DatabaseHandler:
        arguments:
            $connection: '@doctrine.dbal.logger_connection'
        calls:
            - setFormatter: [ '@SchulIT\CommonBundle\Monolog\LineFormatter']

    SchulIT\CommonBundle\Monolog\UsernameProcessor:
        tags:
            - { name: monolog.processor }
    SchulIT\CommonBundle\Monolog\LineFormatter: ~
    SchulIT\CommonBundle\Monolog\RequestProcessor:
        tags:
            - { name: monolog.processor }
    #SchulIT\CommonBundle\Monolog\ExceptionProcessor:
    #    tags:
    #        - { name: monolog.processor }
    App\Monolog\SqlAwareExceptionProcessor:
        tags:
            - { name: monolog.processor }

    #App\Monolog\UsernameProcessor:
    #    tags:
    #        - { name: monolog.processor }
    #App\Monolog\RequestProcessor:
    #    tags:
    #        - { name: monolog.processor }

    # UNTIS
    App\Untis\Html\Substitution\SubstitutionReader:
        arguments:
            $infotextReader: !tagged app.untis.import.infotext_reader

    App\Untis\StudentId\StudentIdGenerator:
        arguments:
            $generators: !tagged app.untis.student_id_generator

    # MISC
    App\EventSubscriber\LoadMessengerCronJobs:
        arguments:
            $useCronjobForMessenger: "%env(bool:MESSENGER_CRONJOB)%"
            $command: '@console.command.messenger_consume_messages'

    # TWIG
    App\Twig\WebpackEntryCssSourceExtension:
        bind:
            $publicDir: '%kernel.project_dir%/public'

when@test:
    # See https://github.com/DamienHarper/auditor/issues/141#issuecomment-1397949309
    services:
        doctrine.orm.entity_manager.abstract:
            class: '%doctrine.orm.entity_manager.class%'
            lazy: false
            abstract: true